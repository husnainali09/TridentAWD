#######################################################################
#                          Print Start 
#######################################################################

[gcode_macro PRINT_START] #
 #   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    BED_MESH_CLEAR

    {% set BED_TEMP = params.BED_TEMP|default(50)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
    {% set CHAMBER_TEMP = params.Chamber|default(0)|float %}
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

    # home and sync motors first before heating    
    M117 Homing...      
    
    DaylightLEDs_Low
    
    # Turn off fans to reduce vibrations for motor cync
#    SET_FAN_SPEED FAN=fan0 SPEED=0
#    SET_FAN_SPEED FAN=fan3 SPEED=0
    
    CLEAR_PAUSE
    
#    G28 Y
#    G28 X
#    {% if not printer.motors_sync.applied %}
#      SYNC_MOTORS
#    {% endif %}

#    turn the fume pack back on
#    SET_FAN_SPEED FAN=fan3 SPEED=0.6

    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={150}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP}
    G28
    # Home Z and run z-tilt
    M117 Z_tilt_adjusting...
    Z_TILT_ADJUST                       # Gantry levelling
    M117 Bed Meshing...
    BED_MESH_CALIBRATE ADAPTIVE=1       # Loading the net bed
    CARTOGRAPHER_TOUCH                ; Perform touch probe
    G1 X270    Y10 Z10 F5000.0         # Move to start position
    G92 E0                              # Reset Extruder
    G90                                 ; absolute positioning
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP}

#    M117 Drawing lines...
#    LINE_PURGE
#    SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=1
    M117 # Clearing text messages from console
#--------------------------------------------------------------------
[gcode_macro PRINT_END]
gcode:
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
#   SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=0
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-20.0 F3600                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    SET_FAN_SPEED FAN=fan0 SPEED=0
    SET_FAN_SPEED FAN=fan2 SPEED=0
    SET_FAN_SPEED FAN=fan3 SPEED=0
    Daylight_LEDs_Off
    
    BED_MESH_CLEAR

    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0


#######################################################################
#                          Filament 
#######################################################################

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  25
variable_slow_load_distance: 50
variable_purge_distance:  35
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{slow_load_distance} F{speed}
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  50
variable_purge_distance:  5
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state

#######################################################################
#                          Cartographer 
#######################################################################

[gcode_macro DATA_SAMPLE]
gcode:
  G90
  M106 S255
  RESPOND TYPE=command MSG='Waiting for Coil to cool to 40'
  M117 Waiting for Coil to cool to 40
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MAXIMUM=40
  RESPOND TYPE=command MSG='Starting Phase 1 of 4'
  M117 Starting Phase 1 of 4
  M106 S0
  G28
  G0 Z1
  M104 S250
  M140 S110
  G4 P1000
  CARTOGRAPHER_STREAM FILENAME=data1
  M117 Waiting for Coil to heat to 70
  RESPOND TYPE=command MSG='Waiting for Coil to heat to 70'
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MINIMUM=55
  CARTOGRAPHER_STREAM FILENAME=data1
  M104 S0
  M140 S0
  M106 S255
  G0 Z80
  RESPOND TYPE=command MSG='Waiting for Coil to cool to 40'
  M117 Waiting for Coil to cool to 40
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MAXIMUM=40

  M117 Starting Phase 2 of 4
  RESPOND TYPE=command MSG='Starting Phase 2 of 4'
  M106 S0
  G28 Z0
  G0 Z2
  M104 S250
  M140 S110
  G4 P1000
  CARTOGRAPHER_STREAM FILENAME=data2
  M117 Waiting for Coil to heat to 70
  RESPOND TYPE=command MSG='Waiting for Coil to heat to 70'
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MINIMUM=55
  CARTOGRAPHER_STREAM FILENAME=data2
  M104 S0
  M140 S0
  M106 S255
  G0 Z80
  RESPOND TYPE=command MSG='Waiting for Coil to cool to 40'
  M117 Waiting for Coil to cool to 40
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MAXIMUM=40

  M117 "Starting Phase 3 of 4"
  RESPOND TYPE=command MSG='Starting Phase 3 of 4'
  M106 S0
  G28 Z0
  G0 Z3
  M104 S250
  M140 S110
  G4 P1000
  CARTOGRAPHER_STREAM FILENAME=data3
  M117 Waiting for Coil to heat to 70
  RESPOND TYPE=command MSG='Waiting for Coil to heat to 70'
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MINIMUM=55
  CARTOGRAPHER_STREAM FILENAME=data3
  M104 S0
  M140 S0
  M106 S255
  G0 Z80
  M117 Waiting for Coil to cool to 40
  RESPOND TYPE=command MSG='Waiting for Coil to cool to 40'
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MAXIMUM=40

  M117 "Starting Phase 4 of 4"
  RESPOND TYPE=command MSG='Starting Phase 4 of 4'
  M106 S0
  G28 Z0
  G0 Z5
  M104 S250
  M140 S110
  G4 P1000
  CARTOGRAPHER_STREAM FILENAME=data4
  M117 Waiting for Coil to heat to 70
  RESPOND TYPE=command MSG='Waiting for Coil to heat to 70'
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MINIMUM=55
  CARTOGRAPHER_STREAM FILENAME=data4
  M104 S0
  M140 S0
  RESPOND TYPE=command MSG='Testing complete, please move files using: mv ~/klipper/data1 ~/klipper/data2 ~/klipper/data3 ~/klipper/data4 ~/cartographer-klipper/'
  M117 "Testing complete, please move files using: mv ~/klipper/data1 ~/klipper/data2 ~/klipper/data3 ~/klipper/data4 ~/cartographer-klipper/"
  RESPOND TYPE=command MSG='Follow the remaining instructions here: https://docs.cartographer3d.com/cartographer-probe/advanced-features/temperature-differential-calibration-beta'
  M117 "Follow the remaining instructions here: https://docs.cartographer3d.com/cartographer-probe/advanced-features/temperature-differential-calibration-beta"


#######################################################################
#                          General 
#######################################################################

[gcode_macro enable_stepper]
gcode:
    {% set enable = params.ENABLE|default(1)|int %}
    {% if enable > 1 %}
        {% set enable = 1 %}
    {% endif %}
    
    SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE={enable}
    SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE={enable}
    SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE={enable}
    SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE={enable}

[gcode_macro CENTER]
gcode:
  G90                             # Absolute positioning
  G0 X175 Y175 F36000             # Move toolhead to the center of the bed 

[gcode_macro square_move]
gcode:
  {% set loop_count = params.REPEAT|default(1)|int %}
  {% set speed = params.SPEED|default(30000)|int %}
  G90
  {% for count in range(loop_count) %}
    G0 X50 Y50 F{speed}
    G0 X300
    G0 Y300
    G0 X50
    G0 Y50
  {% endfor %}
  
  CENTER

[gcode_macro _START_FUME_PACK_STOP_TIMER]
gcode:
    {% set time = params.TIME|default(1800)|float %}

    UPDATE_DELAYED_GCODE ID=_STOP_FUME_PACK DURATION={time}

[delayed_gcode _STOP_FUME_PACK]
gcode:
    SET_FAN_SPEED FAN=fan3 SPEED=0

[gcode_macro _CANCEL_FUME_PACK_STOP_TIMER]
gcode:
    UPDATE_DELAYED_GCODE ID=_STOP_FUME_PACK DURATION=0

[gcode_macro motor_sync]
gcode:
    SYNC_MOTORS FORCE_RUN=1

[gcode_macro DRAW_LINES]
gcode:
    G90                           # Absolute positioning
    # G92 E0                      # Reset Extruder (commented out for now)
    # G1 Z5.0  F7200              # Move Z Axis up (commented out for now)
    G1 X50  Y0         F7200      # Move to start position
    M83                           # Set extruder to relative mode
    G1 E15 F400                   # Extrude filament
    G1 Z0.28 F7200                # Lower Z axis
    G1 X200 Y0   Z0.28 F1200 E17  # Draw the first line
    G1 X200 Y0.4 Z0.28 F2400      # Move to side a little
    G1 X55  Y0.4 Z0.28 F1200 E34  # Draw the second line
    G92 E0                        # Reset Extruder
    G90                           # Return to absolute positioning

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro M191]
gcode:
    {% set s = params.S|float %}
    {% if s == 0 %}
        # If target temperature is 0, do nothing
        M117 Chamber heating cancelled
    {% else %}
        SET_HEATER_TEMPERATURE HEATER=chamber_heater TARGET={s}
        # Orca: uncomment the following line if you want to use heat bed to assist chamber heating
        M140 S90
        TEMPERATURE_WAIT SENSOR="temperature_sensor Chamber" MINIMUM={s-1} MAXIMUM={s+1}
        M117 Chamber at target temperature
    {% endif %}

#######################################################################
#                          Klipper-Backup 
#######################################################################

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh -c \"$0\""
timeout: 90.0
verbose: True

[gcode_shell_command cpufreq_set]
command: sh -c "sudo /usr/bin/cpufreq-set -g $0"
timeout: 5.0
verbose: True

[gcode_macro _cpufreq_set]
description: set cpu governor
gcode:
  {% set governor = params.GOVERNOR|default("performance") %}
  RESPOND MSG='{"CPU set to %s" % (governor)}'
  RUN_SHELL_COMMAND CMD=cpufreq_set PARAMS={governor}
